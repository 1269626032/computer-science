* Java工具
** ant
Apache Ant,是一个将软件编译、测试、部署等步骤联系在一起加以自动化的一个工具，大多用于Java环境中的软件开发。
由Apache软件基金会所提供。

Ant的构建文件
当开始一个新的项目时，首先应该编写Ant构建文件。构建文件定义了构建过程，并被团队开发 中每个人使用。Ant构建文件默认名为build.xml，也可以取其他的名字。只不过在运行的时候 把这个命名当作参数传给Ant。构建文件可以放在任何的位置。一般做法是放在项目顶层目录中。 这样可以保持项目的简洁和清晰。下面是一个典型的项目层次结构。
(1) src存放文件。
(2) class存放编译后的文件。
(3) lib存放第三方JAR包。
(4) dist存放打包，发布以后的代码。
Ant构建文件是XML文件。
每个构建文件定义一个唯一的项目(Project元素)。
每个项目下可以定 义很多目标(target元素)，这些目标之间可以有依赖关系。
当执行这类目标时，需要执行他们所 依赖的目标。
每个目标中可以定义多个任务，目标中还定义了所要执行的任务序列。
Ant在构建目标时必须调 用所定义的任务。
任务定义了Ant实际执行的命令。
Ant中的任务可以为3类。
（1） 核心任务。
核心任务是Ant自带的任务。
（2） 可选任务。
可选任务是来自第三方的任务，因此需要一个附加的JAR文件。
（3） 用户自定义的任务。
用户自定义的任务是用户自己开发的任务。
运行如下代码可以在电脑上安装ant。
#+BEGIN_SRC bash
sudo apt-get install ant
#+END_SRC

验证是否安装成功

#+BEGIN_SRC bash
ant -version
#+END_SRC

** maven
make->Ant->Maven->Gradle
那么，Maven 和 Ant 有什么不同呢？在回答这个问题以前，我要强调一点：
Maven 和 Ant 针对构建问题的两个不同方面。
Ant 为 Java 技术开发项目提供跨平台构建任务。
Maven 本身描述项目的高级方面，它从 Ant 借用了绝大多数构建任务。
因此，由于 Maven 和 Ant 代表两个差异很大的工具，所以我将只说明这两个工具的等同组件之间的区别，
如表 1 所示。
#+BEGIN_SRC bash
sudo apt-get install maven
#+END_SRC

#+BEGIN_SRC xml
maven -version
#+END_SRC
